gcc -o test delimiter.c parser_creator.c stack.c mime_list.c mime_type.c mime_chars.c parser_utils.c mime_msg.c multi_pop3_parser.c mime_filter.c



501) OK

	Objetivo: No existan cambios.

	FILTER_MEDIAS=application/json ./stripmime < ./test_cases/ii_images.mbox > out

	diff -u ii_images.mbox out


502) OK

	Objetivo: Censure la parte png

	FILTER_MEDIAS=image/png ./stripmime < ./test_cases/ii_images.mbox > out

	diff -u ii_images.mbox out

503) OK

	Objetivo: Censure las partes jpeg y png

	FILTER_MEDIAS=image/png,image/jpeg ./stripmime <./test_cases/ii_images.mbox> out

	diff -u ii_images.mbox out

504) OK

	Objetivo: Censure las partes jpeg y png

	FILTER_MEDIAS=image/* ./stripmime <../test_cases/ii_images.mbox> out

	diff -u ii_images.mbox out

505) OK 

	Objetivo: Censure partes jpeg y png

	FILTER_MEDIAS=image/* ./stripmime <../test_cases/iii_images_fwd.mbox> out

	diff -u ii_images.mbox out

506)	OK

	No debe haber diferencias en la salida. También es importante ver la relaciones de tiempo de ejecución entre cat (sin filtro) y
	stripmime (sin filtro).

	EN PAMPERO LO CORRI EL 1ERO DE NOVIEMBRE

	time cat ../test_cases/i_big.mbox  > /dev/null 
	real    0m58.821s
	user    0m0.017s
	sys     0m1.161s

	--EN LINUX--
	real    0m0.093s
	user    0m0.002s
	sys     0m0.090s

	--EN LINUX-- volcando a un out
	real    0m9.727s
	user    0m0.000s
	sys     0m0.587s


	FILTER_MEDIAS=a/b time cat ../test_cases/i_big.mbox | ./test | pv > out


	---EN LINUX--

	export FILTER_MEDIAS=a/b
	time cat i_big.mbox | ./stripmime | pv > out
	real    1m33.663s
	user    1m28.835s
	sys     0m4.509s
	

507)	OK

	Se busca la parte de más megas del mensaje. Que únicamente la parte application/x-cd-image quede fuera del mensaje.


	FILTER_MEDIAS=application/x-cd-image time cat ../test_cases/i_big.mbox | ./test | pv > out

	export FILTER_MEDIAS=application/x-cd-image
	time cat i_big.mbox | ./stripmime | pv > out
	real    1m21.334s
	user    1m21.096s
	sys     0m1.604s